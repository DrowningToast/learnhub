pipeline {
    agent any

    environment {
        DOCKER_COMPOSE_FILE = 'docker-compose.prod.yml'
        GIT_URL             = 'https://github.com/FewPz/learnhub.git'
        GIT_BRANCH          = 'feat/jenkins'

        REMOTE_HOST         = 'sila_pakdeewong@34.143.197.151'
        SSH_CREDENTIALS     = 'devtools-production'
    }

    stages {
        stage('Checkout') {
            steps {
                script {
                    // Checkout code from Git repository
                    checkout scmGit(branches: [[name: "*/${GIT_BRANCH}"]], extensions: [], userRemoteConfigs: [[credentialsId: 'github', url: "${GIT_URL}"]])
                }
            }
        }

        stage('Build and Deploy') {
            steps {
                script {
                    sshagent([SSH_CREDENTIALS]) {
                        // Copy files to the remote server
                        sh """
                            scp -o StrictHostKeyChecking=no -r ./* ${REMOTE_HOST}:/home/sila_pakdeewong/devtools
                        """

                        // SSH into the remote server to bring down existing services
                        sh """
                            ssh -o StrictHostKeyChecking=no ${REMOTE_HOST} "cd /home/sila_pakdeewong/devtools && docker-compose --env-file .env.prod -f ${DOCKER_COMPOSE_FILE} down"
                        """

                        // SSH into the remote server to build services using Docker Compose
                        sh """
                            ssh -o StrictHostKeyChecking=no ${REMOTE_HOST} "cd /home/sila_pakdeewong/devtools && docker-compose --env-file .env.prod -f ${DOCKER_COMPOSE_FILE} build"
                        """

                        // SSH into the remote server to start services
                        sh """
                            ssh -o StrictHostKeyChecking=no ${REMOTE_HOST} "cd /home/sila_pakdeewong/devtools && docker-compose --env-file .env.prod -f ${DOCKER_COMPOSE_FILE} up -d"
                        """

                        // Clear and cache Laravel configuration
                        sh """
                            ssh -o StrictHostKeyChecking=no ${REMOTE_HOST} "cd /home/sila_pakdeewong/devtools && docker-compose exec laravel php artisan config:clear && docker-compose exec laravel php artisan config:cache"
                        """
                    }
                }
            }
        }

    }

    post {
        always {
            sshagent([SSH_CREDENTIALS]) {
                // SSH into the remote server to clean up Docker resources
                sh """
                    ssh -o StrictHostKeyChecking=no ${REMOTE_HOST} "docker system prune -f"
                """
            }
            // Clean up the Jenkins workspace
            cleanWs()
        }
    }
}
